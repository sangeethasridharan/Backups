package list;
import java.util.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Deque;
import java.util.EmptyStackException;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;

class Example1 {

	public void data() {

		Vector<String> v = new Vector<String>();
		v.add("addition");
		v.add("subtraction");
		v.add("multiplication");
		v.add("division");
		ArrayList<String> al = new ArrayList<String>(v);
		System.out.println(al);
		al.remove(3);
		System.out.println(al);
		al.add("Division");
		System.out.println(al);
		
	}
}

class Example2 extends Example1
{
	
	static void stck()
	{
		
		Stack<Integer> st = new Stack<Integer>();
		System.out.println("stack: " + st); 
	
		st.push(42); 
		st.push(66); 
		st.push(99); 
		
		System.out.println("stack: " + st); 
		
		try { 
		System.out.println("pop -> " +st.pop());   
		System.out.println("stack: " + st); 
		st.pop(); 
		st.pop(); 	
		st.pop();
		
		}
		catch (EmptyStackException e)
		{ 
			System.out.println("stack: " + st); 
			System.out.println("empty stack"); 
		} 
		
		LinkedList<Integer> ll = new LinkedList<Integer>(st);
		((Deque<Integer>) ll).addFirst(77);
		
	} 
	 
}

public class Example
{
	public static void main(String ar[])
	{
	    Example2.stck();
		
	}

}
